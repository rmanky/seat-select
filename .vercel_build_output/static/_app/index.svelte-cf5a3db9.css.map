{"version":3,"file":"index.svelte-cf5a3db9.css","sources":["..\\..\\..\\..\\..\\index.svelte"],"sourcesContent":["<script type=\"ts\">let name = \"Meena\";\r\nvar SeatStatus;\r\n(function (SeatStatus) {\r\n    SeatStatus[SeatStatus[\"Empty\"] = 0] = \"Empty\";\r\n    SeatStatus[SeatStatus[\"Reserved\"] = 1] = \"Reserved\";\r\n    SeatStatus[SeatStatus[\"Selected\"] = 2] = \"Selected\";\r\n    SeatStatus[SeatStatus[\"Confirmed\"] = 3] = \"Confirmed\";\r\n})(SeatStatus || (SeatStatus = {}));\r\nlet color = {\r\n    0: \"bg-gray-800\",\r\n    1: \"bg-red-500\",\r\n    2: \"bg-green-500\",\r\n    3: \"bg-blue-500\"\r\n};\r\nlet radioGroup = [];\r\nconst seats = [];\r\n[...Array(16).keys()].forEach((num) => {\r\n    seats.push({\r\n        seatNumber: num + 1,\r\n        status: SeatStatus.Empty,\r\n    });\r\n});\r\nseats[3].status = SeatStatus.Reserved;\r\nfunction selectSeat(seatNum) {\r\n    seats.map((data) => {\r\n        if (data.status == SeatStatus.Selected) {\r\n            data.status = SeatStatus.Empty;\r\n        }\r\n    });\r\n    if (seats[seatNum - 1].status != SeatStatus.Reserved) {\r\n        seats[seatNum - 1].status = SeatStatus.Selected;\r\n    }\r\n}\r\n//# sourceMappingURL=index.svelte.js.map</script>\n\n<div>\n  <h1 class=\"uppercase text-5xl font-extrabold mb-3\">Seat Select</h1>\n  <div class=\"text-xl mb-4\">\n    <p>Welcome, {name}!</p>\n    <p>Please select an <span class=\"font-bold\">open</span> seat.</p>\n  </div>\n  <div class=\"grid grid-cols-2 gap-4 mb-4\">\n    {#each seats as { seatNumber, status }}\n      <label class=\"{color[status]} p-3 rounded\">\n        {seatNumber}\n        <input\n          type=\"radio\"\n          class=\"appearance-none\"\n          bind:group={radioGroup}\n          on:click={() => selectSeat(seatNumber)}\n        />\n      </label>\n    {/each}\n  </div>\n  <button>Confirm</button>\n</div>\n\n<style lang=\"postcss\">div{text-align:center}</style>\n"],"names":[],"mappings":"AAyDsB,kBAAG,CAAC,WAAW,MAAM,CAAC"}