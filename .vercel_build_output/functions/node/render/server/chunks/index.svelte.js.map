{"version":3,"file":"index.svelte.js","sources":["../../../unoptimized/server/_app/routes/index.svelte.js"],"sourcesContent":["import './index.svelte.css.proxy.js';\n/* src\\routes\\index.svelte generated by Svelte v3.31.2 */\nimport { create_ssr_component, each, escape } from \"../../_snowpack/pkg/svelte/internal.js\";\n\nconst css = {\n\tcode: \"div.svelte-1fr36og{text-align:center}\",\n\tmap: \"{\\\"version\\\":3,\\\"file\\\":\\\"index.svelte\\\",\\\"sources\\\":[\\\"index.svelte\\\"],\\\"sourcesContent\\\":[\\\"<script type=\\\\\\\"ts\\\\\\\">let name = \\\\\\\"Meena\\\\\\\";\\\\r\\\\nvar SeatStatus;\\\\r\\\\n(function (SeatStatus) {\\\\r\\\\n    SeatStatus[SeatStatus[\\\\\\\"Empty\\\\\\\"] = 0] = \\\\\\\"Empty\\\\\\\";\\\\r\\\\n    SeatStatus[SeatStatus[\\\\\\\"Reserved\\\\\\\"] = 1] = \\\\\\\"Reserved\\\\\\\";\\\\r\\\\n    SeatStatus[SeatStatus[\\\\\\\"Selected\\\\\\\"] = 2] = \\\\\\\"Selected\\\\\\\";\\\\r\\\\n    SeatStatus[SeatStatus[\\\\\\\"Confirmed\\\\\\\"] = 3] = \\\\\\\"Confirmed\\\\\\\";\\\\r\\\\n})(SeatStatus || (SeatStatus = {}));\\\\r\\\\nlet color = {\\\\r\\\\n    0: \\\\\\\"bg-gray-800\\\\\\\",\\\\r\\\\n    1: \\\\\\\"bg-red-500\\\\\\\",\\\\r\\\\n    2: \\\\\\\"bg-green-500\\\\\\\",\\\\r\\\\n    3: \\\\\\\"bg-blue-500\\\\\\\"\\\\r\\\\n};\\\\r\\\\nlet radioGroup = [];\\\\r\\\\nconst seats = [];\\\\r\\\\n[...Array(16).keys()].forEach((num) => {\\\\r\\\\n    seats.push({\\\\r\\\\n        seatNumber: num + 1,\\\\r\\\\n        status: SeatStatus.Empty,\\\\r\\\\n    });\\\\r\\\\n});\\\\r\\\\nseats[3].status = SeatStatus.Reserved;\\\\r\\\\nfunction selectSeat(seatNum) {\\\\r\\\\n    seats.map((data) => {\\\\r\\\\n        if (data.status == SeatStatus.Selected) {\\\\r\\\\n            data.status = SeatStatus.Empty;\\\\r\\\\n        }\\\\r\\\\n    });\\\\r\\\\n    if (seats[seatNum - 1].status != SeatStatus.Reserved) {\\\\r\\\\n        seats[seatNum - 1].status = SeatStatus.Selected;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n//# sourceMappingURL=index.svelte.js.map</script>\\\\n\\\\n<div>\\\\n  <h1 class=\\\\\\\"uppercase text-5xl font-extrabold mb-3\\\\\\\">Seat Select</h1>\\\\n  <div class=\\\\\\\"text-xl mb-4\\\\\\\">\\\\n    <p>Welcome, {name}!</p>\\\\n    <p>Please select an <span class=\\\\\\\"font-bold\\\\\\\">open</span> seat.</p>\\\\n  </div>\\\\n  <div class=\\\\\\\"grid grid-cols-2 gap-4 mb-4\\\\\\\">\\\\n    {#each seats as { seatNumber, status }}\\\\n      <label class=\\\\\\\"{color[status]} p-3 rounded\\\\\\\">\\\\n        {seatNumber}\\\\n        <input\\\\n          type=\\\\\\\"radio\\\\\\\"\\\\n          class=\\\\\\\"appearance-none\\\\\\\"\\\\n          bind:group={radioGroup}\\\\n          on:click={() => selectSeat(seatNumber)}\\\\n        />\\\\n      </label>\\\\n    {/each}\\\\n  </div>\\\\n  <button>Confirm</button>\\\\n</div>\\\\n\\\\n<style lang=\\\\\\\"postcss\\\\\\\">div{text-align:center}</style>\\\\n\\\"],\\\"names\\\":[],\\\"mappings\\\":\\\"AAyDsB,kBAAG,CAAC,WAAW,MAAM,CAAC\\\"}\"\n};\n\nlet name = \"Meena\";\n\nconst Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n\tvar SeatStatus;\n\n\t(function (SeatStatus) {\n\t\tSeatStatus[SeatStatus[\"Empty\"] = 0] = \"Empty\";\n\t\tSeatStatus[SeatStatus[\"Reserved\"] = 1] = \"Reserved\";\n\t\tSeatStatus[SeatStatus[\"Selected\"] = 2] = \"Selected\";\n\t\tSeatStatus[SeatStatus[\"Confirmed\"] = 3] = \"Confirmed\";\n\t})(SeatStatus || (SeatStatus = {}));\n\n\tlet color = {\n\t\t0: \"bg-gray-800\",\n\t\t1: \"bg-red-500\",\n\t\t2: \"bg-green-500\",\n\t\t3: \"bg-blue-500\"\n\t};\n\n\tlet radioGroup = [];\n\tconst seats = [];\n\n\t[...Array(16).keys()].forEach(num => {\n\t\tseats.push({\n\t\t\tseatNumber: num + 1,\n\t\t\tstatus: SeatStatus.Empty\n\t\t});\n\t});\n\n\tseats[3].status = SeatStatus.Reserved;\n\n\tfunction selectSeat(seatNum) {\n\t\tseats.map(data => {\n\t\t\tif (data.status == SeatStatus.Selected) {\n\t\t\t\tdata.status = SeatStatus.Empty;\n\t\t\t}\n\t\t});\n\n\t\tif (seats[seatNum - 1].status != SeatStatus.Reserved) {\n\t\t\tseats[seatNum - 1].status = SeatStatus.Selected;\n\t\t}\n\t}\n\n\t$$result.css.add(css);\n\n\treturn `<div class=\"${\"svelte-1fr36og\"}\"><h1 class=\"${\"uppercase text-5xl font-extrabold mb-3\"}\">Seat Select</h1>\n  <div class=\"${\"text-xl mb-4 svelte-1fr36og\"}\"><p>Welcome, ${escape(name)}!</p>\n    <p>Please select an <span class=\"${\"font-bold\"}\">open</span> seat.</p></div>\n  <div class=\"${\"grid grid-cols-2 gap-4 mb-4 svelte-1fr36og\"}\">${each(seats, ({ seatNumber, status }) => `<label class=\"${escape(color[status]) + \" p-3 rounded\"}\">${escape(seatNumber)}\n        <input type=\"${\"radio\"}\" class=\"${\"appearance-none\"}\">\n      </label>`)}</div>\n  <button>Confirm</button>\n</div>`;\n});\n\nexport default Routes;\n//# sourceMappingURL=index.svelte.js.map\n"],"names":["css","code","map","Routes","create_ssr_component","$$result","$$props","$$bindings","slots","SeatStatus","color","0","1","2","3","seats","Array","keys","forEach","num","push","seatNumber","status","Empty","Reserved","add","escape","each"],"mappings":"8EAIA,MAAMA,EAAM,CACXC,KAAM,wCACNC,IAAK,+jEAKD,MAACC,EAASC,wBAAqB,CAACC,EAAUC,EAASC,EAAYC,KACnE,IAAIC,GAEJ,SAAWA,GACVA,EAAWA,EAAkB,MAAI,GAAK,QACtCA,EAAWA,EAAqB,SAAI,GAAK,WACzCA,EAAWA,EAAqB,SAAI,GAAK,WACzCA,EAAWA,EAAsB,UAAI,GAAK,YAJ3C,CAKGA,IAAeA,EAAa,KAE/B,IAAIC,EAAQ,CACXC,EAAG,cACHC,EAAG,aACHC,EAAG,eACHC,EAAG,eAIJ,MAAMC,EAAQ,GAyBd,MAvBA,IAAIC,MAAM,IAAIC,QAAQC,SAAQC,IAC7BJ,EAAMK,KAAK,CACVC,WAAYF,EAAM,EAClBG,OAAQb,EAAWc,WAIrBR,EAAM,GAAGO,OAASb,EAAWe,SAc7BnB,EAASL,IAAIyB,IAAIzB,GAEV,2JACsD0B,SA9CnD,yJAgDsDC,OAAKZ,GAAO,EAAGM,WAAAA,EAAYC,OAAAA,KAAa,iBAAiBI,SAAOhB,EAAMY,IAAW,mBAAmBI,SAAOL"}